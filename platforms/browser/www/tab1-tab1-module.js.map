{"version":3,"sources":["webpack:///./src/app/pages/tab1/tab1.module.ts","webpack:///./src/app/pages/tab1/tab1.page.html","webpack:///./src/app/pages/tab1/tab1.page.scss","webpack:///./src/app/pages/tab1/tab1.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB3B,6UAA6U,uIAAuI,qFAAqF,WAAW,yCAAyC,aAAa,6Z;;;;;;;;;;;ACA1mB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;ACAb;AACH;AACO;AACK;AAO3D;IAGE,kBAAmB,OAAuB,EAAU,MAAe;QAAhD,YAAO,GAAP,OAAO,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAS;QAF5D,kBAAa,GAAS,EAAE,CAAC;QAIhC,UAAK,GAAG,EAAE,CAAC;QACX,iBAAY,GAAG,IAAI,6DAAS,CAAC,mBAAmB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;IAHT,CAAC;IAKxE,2BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,8BAAW,GAAX;QAAA,iBAeC;QAbC,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QAEzC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,CAClC,kBAAQ;YACN,8CAA8C;YAC5C,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YACrD,wDAAwD;QAC1D,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gCAAa,GAAb,UAAc,KAAK,EAAE,IAAI;QACvB,OAAO,CAAC,GAAG,CAAC,qBAAqB,GAAE,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,gBAAgB,GAAsB;YACxC,KAAK,EAAG;gBACN,IAAI,EAAG,IAAI,CAAC,QAAQ;aACrB;SACF;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;IAED,gCAAa,GAAb,UAAc,KAAK;QAAnB,iBAiBC;QAhBC,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,IAAI,CAChC,kBAAQ;YACN,8CAA8C;YAC5C,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;YAC7C,IAAI,QAAQ,IAAI,EAAE,EAAC;gBACjB,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aAC1D;YACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YACnD,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC1B,wDAAwD;QAC1D,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;QAC5D,CAAC,CACF,CAAC;IACN,CAAC;IA1DU,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,4FAA+B;;SAEhC,CAAC;+EAI6B,4DAAa,EAAmB,sDAAM;OAHxD,QAAQ,CA4DpB;IAAD,eAAC;CAAA;AA5DoB","file":"tab1-tab1-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab1Page } from './tab1.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab1Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Chats</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list>\\n      <div *ngFor=\\\"let user of userListArray\\\">\\n          <ion-item (click)=\\\"tappedOnItems($event, user)\\\">\\n              <ion-avatar slot=\\\"start\\\">\\n                <img src=\\\"{{user.avatar || 'https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?resize=256%2C256&quality=100&ssl=1' }}\\\">\\n              </ion-avatar>\\n              <ion-label>\\n                  <h2>{{user.name}}</h2>\\n                  <ion-note><h3>{{user.status}}</h3></ion-note>\\n              </ion-label> \\n          </ion-item>\\n        </div>\\n      </ion-list>\\n      <ion-infinite-scroll threshold=\\\"100px\\\" (ionInfinite)=\\\"loadNextUsers($event)\\\">\\n          <ion-infinite-scroll-content\\n            loadingSpinner=\\\"dots\\\"\\n            loadingText=\\\"Loading more data...\\\">\\n          </ion-infinite-scroll-content>\\n        </ion-infinite-scroll>\\n  </ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RhYjEvdGFiMS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { CometChat, User } from '@cometchat-pro/chat';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: './tab1.page.html',\n  styleUrls: ['./tab1.page.scss'],\n})\nexport class Tab1Page implements OnInit {\n  public userListArray : any = [];\n  public userData : User;\n  constructor(public navCtrl : NavController, private router : Router) { }\n\n  limit = 30;\n  usersRequest = new CometChat.UsersRequestBuilder().setLimit(this.limit).build();\n\n  ngOnInit() {\n    this.getUserList();\n  }\n\n  getUserList(){\n\n    console.log(\"here the call has reached\");\n\n    this.usersRequest.fetchNext().then(\n    userList => {\n      /* userList will be the list of User class. */\n        this.userListArray = userList;\n        console.log(\"UserList Array :\",this.userListArray);\n      /* retrived list can be used to display contact list. */\n    },\n    error => {\n      console.log(\"User list fetching failed with error:\", error);\n      }\n    );\n  }\n\n  tappedOnItems(event, user){\n    console.log(\"here tappedOnItems \"+ user);\n    this.userData = user;\n    console.log(\"{{user.name}}\");\n    let navigationExtras : NavigationExtras = {\n      state : {\n        user : this.userData\n      }\n    }\n    this.router.navigate(['chat-view'],navigationExtras);\n  }\n\n  loadNextUsers(event) {\n    console.log(\"here the next users are loaded\");\n    this.usersRequest.fetchNext().then(\n      userList => {\n        /* userList will be the list of User class. */\n          console.log(\"User list received:\", userList);\n          if (userList != \"\"){\n            this.userListArray = this.userListArray.concat(userList);\n          }\n          console.log(\"UserList Array :\",this.userListArray);\n          event.target.complete();\n        /* retrived list can be used to display contact list. */\n      },\n      error => {\n        console.log(\"User list fetching failed with error:\", error);\n        }\n      );\n  }\n\n}\n"],"sourceRoot":""}